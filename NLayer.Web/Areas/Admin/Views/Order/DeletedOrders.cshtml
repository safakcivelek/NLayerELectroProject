@using NLayer.Core.DTOs.Concert;
@model OrderListDto
@{
    Layout = "_Layout";
    ViewData["Title"] = "Silinmiş Siparişler";
}

<div id="modalPlaceHolder" aria-hidden="true"></div>
<div class="card mt-4">
    <div class="card-header text-white" style="background-color:#212529; height:56px;">
        <i class="fas fa-table"></i>
        <span class="ml-1">Silinmiş Siparişler</span>
    </div>
    <div class="card-body" style="background-color:#e9ecef;">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Müşteri</th>
                    <th>Açıklama</th>
                    <th>Durumu</th>
                    <th>Adresi</th>
                    <th>Ülke</th>
                    <th>Şehir</th>
                    <th>Posta Kodu</th>
                    <th>Aktif Mi?</th>
                    <th>Silinmiş Mi?</th>
                    <th style="text-align:center;vertical-align:middle;">İşlemler</th>
                    @*<th style="width:1%;">Sil</th>*@
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>#</th>
                    <th>Müşteri</th>
                    <th>Açıklama</th>
                    <th>Durumu</th>
                    <th>Adresi</th>
                    <th>Ülke</th>
                    <th>Şehir</th>
                    <th>Posta Kodu</th>
                    <th>Aktif Mi?</th>
                    <th>Silinmiş Mi?</th>
                    <th style="text-align:center;vertical-align:middle;">İşlemler</th>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <tr name="@order.Id">
                        <td>@order.Id</td>
                        <td>@order.User.UserName</td>
                        <td>@order.Description</td>
                        @if (!order.IsActive)
                        {
                            <td style="color:red;">Sipariş Alındı, Onay Bekleniyor...</td>
                        }
                        else
                        {
                            <td style="color:green;">Sipariş Onaylandı.</td>
                        }
                        <td>@(order.Address.Length > 50 ? order.Address.Substring(0, 50) + " ..." : order.Address)</td>
                        <td>@order.Country</td>
                        <td>@order.City</td>
                        <td>@order.PostalCode</td>
                        <td>@order.IsActive</td>
                        <td>@order.IsDeleted</td>
                        <td style="text-align:center;vertical-align:middle;">
                            <button class="btn btn-warning btn-sm btn-undo" orderId="@order.Id"><span class="fas fa-undo"></span></button>

                            <button class="btn btn-danger btn-sm  btn-hardDelete" orderId="@order.Id"><span class="fas fa-minus-circle"></span></button>

                            <div class="mt-2"></div>

                            <button class="btn btn-info btn-sm btn-detail" orderId="@order.Id"><span class="fas fa-newspaper"></span></button>

                            @if (order.IsActive)
                            {
                                <button class="btn btn-success btn-sm btn-notApprove" orderId="@order.Id"><span class="fas fa-thumbs-up"></span></button>
                            }
                            else
                            {
                                <button class="btn btn-warning btn-sm btn-approve" orderId="@order.Id"><span class="fas fa-thumbs-down"></span></button>
                            }
                        </td>
                        @* <td>
                    <button class="btn btn-danger btn-sm btn-hardDelete" orderId="@order.Id">Sil</button>
                    </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts
    {
    @*<script src="~/AdminElectro/js/ordersIndex.js" type="application/ecmascript"></script>*@
    <script>
        $(document).ready(function () {
            // Onay İptal
            $(document).on('click', '.btn-notApprove', function (event) {
                event.preventDefault();
                const id = $(this).attr('orderId');
                Swal.fire({
                    title: '"Sipariş Onayını" iptal etmek istediğinize emin misiniz?',
                    text: `( "${id} Id'li siparişin onayı iptal edilecektir!" )`,
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, Onayı İptal Etmek İstiyorum.',
                    cancelButtonText: 'Hayır, Onayı İptal Etmek İstemiyorum.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: { orderId: id },
                            url: '@Url.Action("Approve","Order")',
                            success: function (data) {
                                const orderResult = jQuery.parseJSON(data);
                                if (orderResult.Data != null) {
                                    Swal.fire(
                                        'Sipariş Onayı İptal Edildi.',
                                        `( "${orderResult.Data.Order.Id} Id'li siparişin onayı iptal edilmiştir." )`,
                                        'success'
                                    ).then(function () {
                                        location.reload();
                                    });
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Başarısız İşlem!',
                                        text: 'Beklenmedik bir hata ile karşılaşıldı!'
                                    });
                                }
                            },
                            error: function () {
                                alert("Hatalı İşlem!");
                            }
                        });
                    }
                });
            });
            // Onay İptal

            // Onay
            $(document).on('click', '.btn-approve', function (event) {
                event.preventDefault();
                const id = $(this).attr('orderId');
                Swal.fire({
                    title: '"Siparişi Onaylamak" istediğinize emin misiniz?',
                    text: `( "${id} Id'li sipariş onaylanacaktır!" )`,
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, Onaylamak İstiyorum.',
                    cancelButtonText: 'Hayır, Onaylamak İstemiyorum.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: { orderId: id },
                            url: '@Url.Action("Approve","Order")',
                            success: function (data) {
                                const orderResult = jQuery.parseJSON(data);
                                if (orderResult.Data != null) {
                                    Swal.fire(
                                        'Sipariş Onaylandı.',
                                        `( "${orderResult.Data.Order.Id} Id'li sipariş onaylandı." )`,
                                        'success'
                                    ).then(function () {
                                        location.reload();
                                    });
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Başarısız İşlem!',
                                        text: 'Beklenmedik bir hata ile karşılaşıldı!'
                                    });
                                }
                            },
                            error: function () {
                                alert("Hatalı İşlem!");
                            }
                        });
                    }
                });
            });
            // Onay

            /* Get Detail Ajax Operation */
            $(function () {
                const url = '@Url.Action("GetDetail","Order")'  /*'/Admin/Comment/GetDetail';*/
                const placeHolderDiv = $('#modalPlaceHolder');
                $(document).on('click', '.btn-detail',
                    function (event) {
                        event.preventDefault();
                        const id = $(this).attr('orderId');
                        $.get(url, { orderId: id }).done(function (data) {
                            placeHolderDiv.html(data);
                            placeHolderDiv.find('.modal').modal('show');
                        }).fail(function () {
                            alert("Hatalı İşlem!");
                        });
                    });
            });
            /* Get Detail Ajax Operation */

            // Ajax POST / Delete Start
            $(document).on('click', '.btn-delete',
                function (event) {
                    event.preventDefault();
                    const id = $(this).attr('orderId');
                    const tableRow = $(`[name="${id}"]`);
                    const orderName = tableRow.find('td:eq(0)').text();
                    Swal.fire({
                        title: 'Silmek istediğinize emin misiniz?',
                        text: `${id} Id'li' sipariş silinecektir!`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, silmek istiyorum.',
                        cancelButtonText: 'Hayır, silmek istemiyorum.'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                data: { orderId: id },
                                url: '@Url.Action("Delete","Order")',
                                success: function (data) {
                                    const orderResult = jQuery.parseJSON(data);
                                    if (orderResult.Data != null) {
                                        Swal.fire(
                                            'Silindi!',
                                            `${orderResult.Data.Order.Id} no'lu sipariş başarıyla silinmiştir.`,
                                            'success'
                                        );
                                        tableRow.remove().draw();
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Başarısız İşlem!',
                                            text: `Beklenmedik bir hata ile karşılaşıldı!`
                                        });
                                    }
                                },
                                error: function () {
                                    alert("Hatalı işlem!");
                                }
                            });
                        }
                    });
                }
            );
            // Ajax POST / Delete End

            // Ajax POST / HardDelete Start
            $(document).on('click', '.btn-hardDelete',
                function (event) {
                    event.preventDefault();
                    const id = $(this).attr('orderId');
                    const tableRow = $(`[name="${id}"]`);
                    const orderName = tableRow.find('td:eq(0)').text();
                    Swal.fire({
                        title: 'Tamamen silmek istediğinize emin misiniz?',
                        text: `( "${id}" Id'li' sipariş veritabanından silinecektir! )`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, silmek istiyorum.',
                        cancelButtonText: 'Hayır, silmek istemiyorum.'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                data: { orderId: id },
                                url: '@Url.Action("HardDelete","Order")',
                                success: function (data) {
                                    const orderResult = jQuery.parseJSON(data);
                                    if (orderResult != null) {
                                        Swal.fire(
                                            'Silindi!',
                                            `${orderResult.Message}`,
                                            'success'
                                        );
                                        tableRow.fadeOut(3000);
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Başarısız İşlem!',
                                            text: `${orderResult.Message}`,
                                        });
                                    }
                                },
                                error: function () {
                                    alert("Hatalı işlem !");
                                }
                            });
                        }
                    });
                }
            );
            // Ajax POST / HardDelete End

            /* UndoDelete */
            $(document).on('click', '.btn-undo',
                function (event) {
                    event.preventDefault();
                    const id = $(this).attr('orderId');
                    const tableRow = $(`[name="${id}"]`);
                    const orderName = tableRow.find('td:eq(1)').text();
                    Swal.fire({
                        title: 'Arşivden geri getirmek istediğinize emin misiniz?',
                        text: `${orderName} Id'li sipariş arşivden geri getirilecektir!`,
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, arşivden geri getirmek istiyorum.',
                        cancelButtonText: 'Hayır,  istemiyorum.'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                data: { orderId: id },
                                url: '/Admin/Order/UndoDelete/',
                                success: function (data) {
                                    const undoOrderResult = jQuery.parseJSON(data);
                                    if (undoOrderResult.Data) {
                                        Swal.fire(
                                            'Arşivden Geri Getirildi!',
                                            `${undoOrderResult.Data.Order.Id} no'lu sipariş arşivden geri getirilmiştir.`,
                                            'success'
                                        );
                                        tableRow.remove().draw();
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Başarısız İşlem!',
                                            text: `Beklenmedik bir hata oluştu.`
                                        });
                                    }
                                },
                                error: function () {
                                    alert("Hatalı işlem!");
                                }
                            });
                        }
                    });
                }
            );
            /* UndoDelete */
        });
    </script>
}
